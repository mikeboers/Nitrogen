#!/usr/bin/env python2.6
# encoding: utf8
"""Script for running all of the tests in the nitrogen package.

Imports ALL of the modules (except those in lib), looks for unittest stuff
in them, and looks for doctests.

Runs all of the files that are of the form *.test as doctests.

"""

print "Nitrogen test runner."
print

import os
import sys
import unittest
import doctest
import logging

# Turn off nose logging.
logger = logging.getLogger('nose')
logger.setLevel(1000)

# Add the path ABOVE nitrogen to the path
root_path = os.path.abspath(__file__ + '/../../..')
sys.path.append(root_path)
sys.path.append(root_path + '/nitrogen/lib')



import nose.loader
nose_loader = nose.loader.TestLoader()



suites = []

# Searching for paths...
for dirpath, dirnames, filenames in os.walk(root_path + '/nitrogen'):
    for name in filenames:
        if name.endswith('.py'):
            path = dirpath + '/' + name
            
            # Skip the library or "binaries".
            if '/lib/' in path or '/bin/' in path:
                continue
            
            # Turn it into a module
            name = path[len(root_path) + 1:-3].replace('/', '.')
            try:
                m = __import__(name, fromlist=['force']) # Needs something in fromlist.
                
                # Nose and unit tests
                suite = nose_loader.loadTestsFromModule(m)
                suites.append(suite)
                
                # Doc tests
                try:
                    suite = doctest.DocTestSuite(m)
                    suites.append(suite)
                except ValueError as e:
                    if e.args[1] != 'has no tests':
                        raise
                        
                
            except Exception as e:
                print 'Could not import module %s:' % name
                print '\t%r' % e
            
        elif name.endswith('.test'):
            path = dirpath + '/' + name
            suite = doctest.DocFileSuite(path, module_relative=False, encoding='UTF-8')
            suites.append(suite)

runner = unittest.TextTestRunner()
suite = unittest.TestSuite()
suite.addTests(suites)
runner.run(suite)
